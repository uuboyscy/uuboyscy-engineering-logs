"use strict";(self.webpackChunkuuboyscy_engineering_logs=self.webpackChunkuuboyscy_engineering_logs||[]).push([[7400],{7556:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Git/GitHub Runner Housekeeping","title":"GitHub Runner Housekeeping","description":"To maintain your GitHub Actions self-hosted runner and ensure sufficient disk space, follow these steps:","source":"@site/docs/Git/GitHub Runner Housekeeping.md","sourceDirName":"Git","slug":"/Git/GitHub Runner Housekeeping","permalink":"/uuboyscy-engineering-logs/docs/Git/GitHub Runner Housekeeping","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GitHub Actions Beginner Guide","permalink":"/uuboyscy-engineering-logs/docs/Git/GitHub Actions Beginner Guide"},"next":{"title":"Runner setup","permalink":"/uuboyscy-engineering-logs/docs/Git/Runner setup"}}');var i=s(4848),o=s(8453);const l={},a="GitHub Runner Housekeeping",c={},d=[{value:"1. Clean Up Workflow Artifacts and Logs",id:"1-clean-up-workflow-artifacts-and-logs",level:2},{value:"2. Clean Python and Node.js Caches",id:"2-clean-python-and-nodejs-caches",level:2},{value:"3. Clean Docker Data (if Docker is used)",id:"3-clean-docker-data-if-docker-is-used",level:2},{value:"4. Remove Old Snap Package Versions",id:"4-remove-old-snap-package-versions",level:2},{value:"5. Remove APT Cache",id:"5-remove-apt-cache",level:2},{value:"6. Monitor Disk Usage",id:"6-monitor-disk-usage",level:2},{value:"7. Automate Cleanup with a Script",id:"7-automate-cleanup-with-a-script",level:2},{value:"Script: <code>cleanup_runner.sh</code>",id:"script-cleanup_runnersh",level:3},{value:"Schedule it in <code>cron</code>:",id:"schedule-it-in-cron",level:3}];function t(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"github-runner-housekeeping",children:"GitHub Runner Housekeeping"})}),"\n",(0,i.jsx)(n.h1,{id:"housekeeping-for-github-self-hosted-runner",children:"Housekeeping for GitHub Self-Hosted Runner"}),"\n",(0,i.jsx)(n.p,{children:"To maintain your GitHub Actions self-hosted runner and ensure sufficient disk space, follow these steps:"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1-clean-up-workflow-artifacts-and-logs",children:"1. Clean Up Workflow Artifacts and Logs"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Workflow Temporary Files (",(0,i.jsx)(n.code,{children:"_work"})," Directory):"]}),"\nThe ",(0,i.jsx)(n.code,{children:"_work"})," directory contains temporary files from workflows. Remove old or unused workflow directories:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rm -rf /home/ubuntu/actions-runner/_work/*\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Runner Diagnostic Logs:"}),"\nLogs are stored in the ",(0,i.jsx)(n.code,{children:"_diag"})," directory. Clean them periodically:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rm -rf /home/ubuntu/actions-runner/_diag/*\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"System Logs:"}),"\nReduce the size of system logs:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo journalctl --vacuum-size=100M\nsudo rm -rf /var/log/*.log\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-clean-python-and-nodejs-caches",children:"2. Clean Python and Node.js Caches"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Python Cache:"}),"\nIf workflows install Python tools or versions, clean the cache:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rm -rf /home/ubuntu/.cache/pip\nrm -rf /home/ubuntu/actions-runner/_work/_tool/Python/*\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Node.js Cache:"}),"\nRemove unused Node.js dependencies and cache:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rm -rf /home/ubuntu/.npm\nrm -rf /home/ubuntu/.node-gyp\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-clean-docker-data-if-docker-is-used",children:"3. Clean Docker Data (if Docker is used)"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Remove Unused Containers, Images, and Volumes:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker system prune -a --volumes -f\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Remove Specific Old Docker Data:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'docker images --filter "dangling=true" -q | xargs docker rmi\ndocker volume ls --filter "dangling=true" -q | xargs docker volume rm\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-remove-old-snap-package-versions",children:"4. Remove Old Snap Package Versions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"List Installed Snap Packages:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"snap list\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Clear Old Revisions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo snap set system refresh.retain=2\nsudo snap remove --purge $(snap list --all | awk '/disabled/{print $1, $3}')\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5-remove-apt-cache",children:"5. Remove APT Cache"}),"\n",(0,i.jsx)(n.p,{children:"Clean up the package cache to free space:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get clean\nsudo apt-get autoremove --purge -y\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"6-monitor-disk-usage",children:"6. Monitor Disk Usage"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Identify Large Files/Directories:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo du -ah / | sort -rh | head -n 20\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Monitor Disk Space:"}),"\nRegularly check disk usage:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"df -h\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"7-automate-cleanup-with-a-script",children:"7. Automate Cleanup with a Script"}),"\n",(0,i.jsxs)(n.p,{children:["Create a housekeeping script and schedule it using ",(0,i.jsx)(n.code,{children:"cron"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"script-cleanup_runnersh",children:["Script: ",(0,i.jsx)(n.code,{children:"cleanup_runner.sh"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# Remove old workflows\n\nrm -rf /home/ubuntu/actions-runner/_work/*\n\n# Clear diagnostic logs\nrm -rf /home/ubuntu/actions-runner/_diag/*\n\n# Clean Python and Node.js caches\nrm -rf /home/ubuntu/.cache/pip\nrm -rf /home/ubuntu/.npm\nrm -rf /home/ubuntu/.node-gyp\n\n# Clean Docker data\ndocker system prune -a --volumes -f\n\n# Remove unused Snap revisions\nsudo snap remove --purge $(snap list --all | awk '/disabled/{print $1, $3}')\n\n# Clean APT cache\nsudo apt-get clean\nsudo apt-get autoremove --purge -y\n\n# Clean system logs\nsudo journalctl --vacuum-size=100M\nsudo rm -rf /var/log/*.log\n\necho \"Cleanup completed successfully!\"\n"})}),"\n",(0,i.jsx)(n.p,{children:"Make the script executable:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"chmod +x cleanup_runner.sh\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"schedule-it-in-cron",children:["Schedule it in ",(0,i.jsx)(n.code,{children:"cron"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"crontab -e\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add a cron job to run the script daily or weekly:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"0 2 * * * /path/to/cleanup_runner.sh\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"By following these steps, you can ensure your runner stays clean and has enough disk space for ongoing workflows."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(6540);const i={},o=r.createContext(i);function l(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);