<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>UUBOYSCY ENGINEERING LOGS Blog</title>
        <link>https://docs.uuboyscy.dev/blog</link>
        <description>UUBOYSCY ENGINEERING LOGS Blog</description>
        <lastBuildDate>Thu, 26 Dec 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[How dbt Bridges the Gap Between Data Engineers and Analysts]]></title>
            <link>https://docs.uuboyscy.dev/blog/how-dbt-bridges-the-gap-between-data-engineers-and-analysts</link>
            <guid>https://docs.uuboyscy.dev/blog/how-dbt-bridges-the-gap-between-data-engineers-and-analysts</guid>
            <pubDate>Thu, 26 Dec 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="language-note codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-note codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">This article is currently under migration and will be available soon.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>dbt</category>
            <category>GCP</category>
            <category>AWS</category>
            <category>Airflow</category>
            <category>Prefect</category>
        </item>
        <item>
            <title><![CDATA[Modern Data Engineering Milestones: Key Technologies That Shaped the Industry]]></title>
            <link>https://docs.uuboyscy.dev/blog/modern-data-engineering-milestones-key-technologies-that-shaped-the-industry</link>
            <guid>https://docs.uuboyscy.dev/blog/modern-data-engineering-milestones-key-technologies-that-shaped-the-industry</guid>
            <pubDate>Thu, 19 Dec 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="language-note codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-note codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">This article is currently under migration and will be available soon.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>dbt</category>
            <category>GCP</category>
            <category>AWS</category>
            <category>Airflow</category>
            <category>Prefect</category>
        </item>
        <item>
            <title><![CDATA[Why Data Engineers Must Embrace DevOps for Scalable Pipelines]]></title>
            <link>https://docs.uuboyscy.dev/blog/why-data-engineers-must-embrace-devops-for-scalable-pipelines</link>
            <guid>https://docs.uuboyscy.dev/blog/why-data-engineers-must-embrace-devops-for-scalable-pipelines</guid>
            <pubDate>Thu, 18 Apr 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="language-note codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-note codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">This article is currently under migration and will be available soon.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>dbt</category>
            <category>GCP</category>
            <category>AWS</category>
        </item>
        <item>
            <title><![CDATA[From Traditional Data Platforms to Modern Data Middle Platforms]]></title>
            <link>https://docs.uuboyscy.dev/blog/from-traditional-data-platforms-to-modern-data-middle-platforms</link>
            <guid>https://docs.uuboyscy.dev/blog/from-traditional-data-platforms-to-modern-data-middle-platforms</guid>
            <pubDate>Wed, 03 Apr 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="language-note codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-note codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">This article is currently under migration and will be available soon.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>dbt</category>
            <category>GCP</category>
            <category>AWS</category>
        </item>
        <item>
            <title><![CDATA[From Airflow to Prefect: Choosing the Right Orchestration Tool for Your Workflow]]></title>
            <link>https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow</link>
            <guid>https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow</guid>
            <pubDate>Wed, 23 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[---]]></description>
            <content:encoded><![CDATA[<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-introduction">1. Introduction<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#1-introduction" class="hash-link" aria-label="Direct link to 1. Introduction" title="Direct link to 1. Introduction">​</a></h2>
<p>In my role at a traditional company undergoing digital transformation, I faced a common challenge: managing multiple pipelines across Windows and Linux. These pipelines, essential for generating daily dashboard reports, were difficult to monitor, debug, and scale.</p>
<p>While Airflow is a popular choice for orchestration, it didn’t fit well for our diverse team of engineers and analysts. Prefect, on the other hand, addressed our specific needs with its flexibility and user-friendly features.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-the-problem">2. The Problem<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#2-the-problem" class="hash-link" aria-label="Direct link to 2. The Problem" title="Direct link to 2. The Problem">​</a></h2>
<p>Our challenges included:</p>
<ol>
<li><strong>Manual Execution</strong>: Pipelines on Windows <code>ran manually</code>, while Linux relied on <code>crontab</code>.</li>
<li><strong>Monitoring Issues</strong>: No centralized way to monitor or trace errors.</li>
<li><strong>Complexity for Analysts</strong>: Analysts, skilled in SQL but less in Python, found it hard to contribute.</li>
<li><strong>Scalability</strong>: Adding new workers was cumbersome.</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-why-airflow-wasnt-ideal">3. Why Airflow Wasn’t Ideal<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#3-why-airflow-wasnt-ideal" class="hash-link" aria-label="Direct link to 3. Why Airflow Wasn’t Ideal" title="Direct link to 3. Why Airflow Wasn’t Ideal">​</a></h2>
<ul>
<li><strong>Steep Learning Curve</strong>: Difficult for non-engineers to understand and use.</li>
<li><strong>Windows Support</strong>: Running Airflow on Windows required workarounds.</li>
<li><strong>Scaling Issues</strong>: Adding workers or scaling pipelines needed manual effort.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-why-prefect-was-the-solution">4. Why Prefect Was the Solution<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#4-why-prefect-was-the-solution" class="hash-link" aria-label="Direct link to 4. Why Prefect Was the Solution" title="Direct link to 4. Why Prefect Was the Solution">​</a></h2>
<p>Prefect solved our problems by offering:</p>
<ul>
<li><strong>User-Friendly Syntax</strong>: Pythonic workflows easy for both engineers and analysts.</li>
<li><strong>Cross-Platform Support</strong>: Worked seamlessly on both Windows and Linux.</li>
<li><strong>Real-Time Monitoring</strong>: Built-in logging and error handling for quick debugging.</li>
<li><strong>Easy Scaling</strong>: Agents simplified adding more workers as needed.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-steps-to-transition">5. Steps to Transition<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#5-steps-to-transition" class="hash-link" aria-label="Direct link to 5. Steps to Transition" title="Direct link to 5. Steps to Transition">​</a></h2>
<ol>
<li><strong>Analyze Existing Pipelines</strong>: Identify workflows and dependencies.</li>
<li><strong>Set Up Prefect</strong>: Install and configure Prefect for Windows and Linux.</li>
<li><strong>Onboard Analysts</strong>: Train analysts to contribute using SQL-friendly workflows.</li>
<li><strong>Monitor and Debug</strong>: Use Prefect’s UI to track pipeline execution.</li>
<li><strong>Scale When Needed</strong>: Deploy agents for additional capacity.</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-prefect-vs-airflow">6. Prefect vs. Airflow<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#6-prefect-vs-airflow" class="hash-link" aria-label="Direct link to 6. Prefect vs. Airflow" title="Direct link to 6. Prefect vs. Airflow">​</a></h2>
<table><thead><tr><th>Feature</th><th>Airflow</th><th>Prefect</th></tr></thead><tbody><tr><td><strong>Ease of Use</strong></td><td>Complex for non-engineers</td><td>Intuitive and Pythonic</td></tr><tr><td><strong>Windows Support</strong></td><td>Limited</td><td>Excellent</td></tr><tr><td><strong>Monitoring</strong></td><td>Manual log tracing</td><td>Built-in tools</td></tr><tr><td><strong>Scalability</strong></td><td>Requires expertise</td><td>Simple agent setup</td></tr></tbody></table>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="7-airflow-code-vs-prefect-code-a-comparison">7. Airflow Code vs. Prefect Code: A Comparison<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#7-airflow-code-vs-prefect-code-a-comparison" class="hash-link" aria-label="Direct link to 7. Airflow Code vs. Prefect Code: A Comparison" title="Direct link to 7. Airflow Code vs. Prefect Code: A Comparison">​</a></h2>
<p>Below is a side-by-side comparison of the same workflow implemented in <code>Airflow</code> and <code>Prefect</code>.</p>
<ul>
<li>Airflow code:<!-- -->
<div class="language-Python language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> datetime </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> datetime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> timedelta</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> airflow </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> DAG</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> airflow</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">operators</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bash </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> BashOperator</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> airflow</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">operators</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">python </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> PythonOperator</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">task1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Running Task 1"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">task2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Running Task 2"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Default arguments for the DAG</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">default_args </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'owner'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'airflow'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'depends_on_past'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'email'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'your_email@example.com'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'email_on_failure'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'email_on_retry'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'retries'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'retry_delay'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> timedelta</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">minutes</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Define the DAG</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dag </span><span class="token operator">=</span><span class="token plain"> DAG</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'d_02_example_dag_dependency'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    default_args</span><span class="token operator">=</span><span class="token plain">default_args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    description</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'An example DAG with Python operators'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    schedule</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"* * * * *"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    start_date</span><span class="token operator">=</span><span class="token plain">datetime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">2023</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    catchup</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Define the tasks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">task1_obj </span><span class="token operator">=</span><span class="token plain"> PythonOperator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    task_id</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'task1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    python_callable</span><span class="token operator">=</span><span class="token plain">task1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dag</span><span class="token operator">=</span><span class="token plain">dag</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">task2_obj </span><span class="token operator">=</span><span class="token plain"> PythonOperator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    task_id</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'task2'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    python_callable</span><span class="token operator">=</span><span class="token plain">task2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dag</span><span class="token operator">=</span><span class="token plain">dag</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">task3_obj </span><span class="token operator">=</span><span class="token plain"> BashOperator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    task_id</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'task3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    bash_command</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'echo "Hello from Task 3!"'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dag</span><span class="token operator">=</span><span class="token plain">dag</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Task dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">task1_obj </span><span class="token operator">&gt;&gt;</span><span class="token plain"> task2_obj</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">task1_obj </span><span class="token operator">&gt;&gt;</span><span class="token plain"> task3_obj</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>Prefect code:<!-- -->
<div class="language-Python language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> prefect </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> flow</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> task</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> prefect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">tasks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">shell </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> ShellOperation</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:rgb(248, 248, 242)">@task</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">task1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Running Task 1"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:rgb(248, 248, 242)">@task</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">task2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Running Task 2"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:rgb(248, 248, 242)">@flow</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">name</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"d_02_example_dag_dependency"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">example_flow</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)"># Define the tasks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    t1 </span><span class="token operator">=</span><span class="token plain"> task1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    t2 </span><span class="token operator">=</span><span class="token plain"> task2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    t3 </span><span class="token operator">=</span><span class="token plain"> ShellOperation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">commands</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"echo 'Hello from Task 3!'"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)"># Set task dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    t2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">wait_for</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">t1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    t3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">wait_for</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">t1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> __name__ </span><span class="token operator">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"__main__"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    example_flow</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="key-differences">Key Differences<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#key-differences" class="hash-link" aria-label="Direct link to Key Differences" title="Direct link to Key Differences">​</a></h3>
<table><thead><tr><th>Aspect</th><th>Airflow</th><th>Prefect</th></tr></thead><tbody><tr><td><strong>Setup</strong></td><td>Requires defining a DAG explicitly.</td><td>Uses Python functions and decorators.</td></tr><tr><td><strong>Task Definition</strong></td><td>Separate task objects (Python/Bash).</td><td>Python <code>@task</code> decorator for simplicity.</td></tr><tr><td><strong>Dependency Management</strong></td><td>Explicit with <code>&gt;&gt;</code> and <code>&lt;&lt;</code> operators.</td><td>Handled with <code>.wait_for()</code> or function calls.</td></tr><tr><td><strong>Execution</strong></td><td>Deployed to Airflow Scheduler.</td><td>Runs as a Python script or with Prefect Cloud.</td></tr><tr><td><strong>Cross-Platform Support</strong></td><td>Limited for Windows.</td><td>Cross-platform (Windows/Linux).</td></tr></tbody></table>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="8-conclusion">8. Conclusion<a href="https://docs.uuboyscy.dev/blog/from-airflow-to-prefect-choosing-the-right-orchestration-tool-for-your-workflow#8-conclusion" class="hash-link" aria-label="Direct link to 8. Conclusion" title="Direct link to 8. Conclusion">​</a></h2>
<p>Prefect’s simplicity, flexibility, and user-friendly design make it ideal for diverse teams and hybrid environments. By transitioning to Prefect, we unified our workflows, empowered analysts, and improved scalability—proving that the right tool can transform the way we work.</p>
<hr>]]></content:encoded>
            <category>GCP</category>
            <category>Airflow</category>
            <category>Prefect</category>
        </item>
        <item>
            <title><![CDATA[From MapReduce to Spark: The Evolution of Big Data Processing]]></title>
            <link>https://docs.uuboyscy.dev/blog/from-mapreduce-to-spark-the-evolution-of-big-data-processing</link>
            <guid>https://docs.uuboyscy.dev/blog/from-mapreduce-to-spark-the-evolution-of-big-data-processing</guid>
            <pubDate>Tue, 23 Aug 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Introduction: Big Data Challenges]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-introduction-big-data-challenges">1. Introduction: Big Data Challenges<a href="https://docs.uuboyscy.dev/blog/from-mapreduce-to-spark-the-evolution-of-big-data-processing#1-introduction-big-data-challenges" class="hash-link" aria-label="Direct link to 1. Introduction: Big Data Challenges" title="Direct link to 1. Introduction: Big Data Challenges">​</a></h2>
<p>Big data means working with very large amounts of information. In one of my jobs, I had to handle 500TB of data and run more than 10,000 SQL queries every day. The old system we used was slow and had many problems, like some tasks taking over 24 hours to finish. In this blog, I will share how I solved these problems by using Spark and making the system faster and better.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-what-is-hadoop-hive-and-mapreduce">2. What is Hadoop Hive and MapReduce?<a href="https://docs.uuboyscy.dev/blog/from-mapreduce-to-spark-the-evolution-of-big-data-processing#2-what-is-hadoop-hive-and-mapreduce" class="hash-link" aria-label="Direct link to 2. What is Hadoop Hive and MapReduce?" title="Direct link to 2. What is Hadoop Hive and MapReduce?">​</a></h2>
<p>Hadoop Hive is a tool that helps process big data using SQL queries. It works with a system called MapReduce, which was great when it was created but has many limits now:</p>
<ul>
<li><strong>Processes One Query at a Time</strong>: It could not run many queries at once.</li>
<li><strong>Very Slow</strong>: Large or complicated tasks took a long time.</li>
<li><strong>Not Efficient</strong>: It used too many resources for simple tasks.</li>
</ul>
<p>In my work, these issues caused delays, and some tasks took more than one day to finish.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-problems-with-the-old-system">3. Problems with the Old System<a href="https://docs.uuboyscy.dev/blog/from-mapreduce-to-spark-the-evolution-of-big-data-processing#3-problems-with-the-old-system" class="hash-link" aria-label="Direct link to 3. Problems with the Old System" title="Direct link to 3. Problems with the Old System">​</a></h2>
<p>The old system was not good enough for our needs:</p>
<ul>
<li><strong>One Query per Task</strong>: Each SQL query was treated as a separate job, wasting resources.</li>
<li><strong>Huge Data Size</strong>: Processing 100TB of data made it even harder.</li>
<li><strong>Long Task Times</strong>: Some pipelines (multiple tasks) ran for over 24 hours.</li>
</ul>
<p>These problems showed we needed a better solution.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-switching-to-spark">4. Switching to Spark<a href="https://docs.uuboyscy.dev/blog/from-mapreduce-to-spark-the-evolution-of-big-data-processing#4-switching-to-spark" class="hash-link" aria-label="Direct link to 4. Switching to Spark" title="Direct link to 4. Switching to Spark">​</a></h2>
<p>Spark is much faster and better than MapReduce for big data processing. It helped solve our problems because:</p>
<ul>
<li><strong>Faster Processing</strong>: Spark processes data in memory, so tasks are much quicker.</li>
<li><strong>Runs Tasks at the Same Time</strong>: Spark can handle many tasks at once, saving time.</li>
<li><strong>Easy to Use</strong>: Spark has a SQL tool that works like Hive, making the switch simple.</li>
</ul>
<p>After replacing MapReduce with Spark, the system became much faster and could handle more work.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-how-i-improved-the-system">5. How I Improved the System<a href="https://docs.uuboyscy.dev/blog/from-mapreduce-to-spark-the-evolution-of-big-data-processing#5-how-i-improved-the-system" class="hash-link" aria-label="Direct link to 5. How I Improved the System" title="Direct link to 5. How I Improved the System">​</a></h2>
<p>Switching to Spark was just the first step.
<img decoding="async" loading="lazy" alt="mapreduce-to-spark" src="https://docs.uuboyscy.dev/assets/images/mapreduce-to-spark-01df7786c62cee2d9c7f4b5ab7ad807b.png" width="2809" height="664" class="img_ev3q"></p>
<p>After that, I focused on restructuring the system to make it even more efficient.Here’s what I did:</p>
<ol>
<li>
<p><strong>Refactored the Program Architecture</strong>: I modified the structure so that a single task could execute multiple SQL queries at the same time. This reduced the overhead of creating separate tasks for each query, saving both time and resources.
<img decoding="async" loading="lazy" alt="single-product-process" src="https://docs.uuboyscy.dev/assets/images/single-product-process-9da4b8f86fccf6bab7d7ec3ffa9f2b15.png" width="2805" height="1219" class="img_ev3q"></p>
</li>
<li>
<p><strong>Developed an API for SQL Execution</strong>: Since other departments, such as analysts, wanted to use Spark to run SQL but didn’t have programming skills, I created an API called <strong>jobQueue API</strong>. This API allowed them to execute their SQL queries easily:</p>
<ul>
<li>They only needed to know how to make an API request.</li>
<li>They could specify the SQL queries they wanted to execute in the request.</li>
<li>The API handled the processing on Spark, abstracting away all the complexity.</li>
</ul>
<p><img decoding="async" loading="lazy" alt="api-execution-monitor" src="https://docs.uuboyscy.dev/assets/images/api-execution-monitor-2e06b06e78935cec5aa2bc64bc2c2413.png" width="1226" height="488" class="img_ev3q"></p>
</li>
<li>
<p><strong>Run Tasks Together</strong>: By leveraging Spark’s ability to execute tasks in parallel, I optimized query execution times further, ensuring the system could handle a large number of queries more efficiently.
<img decoding="async" loading="lazy" alt="multiple-product-process" src="https://docs.uuboyscy.dev/assets/images/multiple-product-process-6c165c6c365c9bbd7d80d5fba7f6b4ca.png" width="2905" height="1659" class="img_ev3q"></p>
</li>
<li>
<p><strong>Monitor Progress</strong>: Spark’s user interface was helpful for tracking task progress and debugging. I used this to ensure everything was running smoothly and to quickly fix any issues.</p>
</li>
</ol>
<p>With these improvements, the system could run 10,000 SQL queries seamlessly within 3 hours. The addition of the <strong>jobQueue API</strong> also empowered other teams to use Spark without needing deep technical knowledge, making the system more accessible and collaborative.
<img decoding="async" loading="lazy" alt="time-spend-chart" src="https://docs.uuboyscy.dev/assets/images/time-spend-chart-bb6f59f398482fe28eef163096a65d90.png" width="552" height="372" class="img_ev3q"></p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-what-i-learned">6. What I Learned<a href="https://docs.uuboyscy.dev/blog/from-mapreduce-to-spark-the-evolution-of-big-data-processing#6-what-i-learned" class="hash-link" aria-label="Direct link to 6. What I Learned" title="Direct link to 6. What I Learned">​</a></h2>
<p>Here are some important lessons from this project:</p>
<ul>
<li><strong>Small Changes Can Help</strong>: Switching to Spark and combining queries made a huge difference in performance and efficiency.</li>
<li><strong>Use the Right Tool</strong>: Spark's features like in-memory processing and parallel execution were perfect for our workload.</li>
<li><strong>Be Efficient</strong>: Designing the system to execute multiple SQL queries in a single task saved both time and resources.</li>
</ul>
<p>These lessons highlight the importance of choosing the right approach and tools when working with big data.</p>]]></content:encoded>
            <category>Hadoop</category>
            <category>Spark</category>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://docs.uuboyscy.dev/blog/welcome</link>
            <guid>https://docs.uuboyscy.dev/blog/welcome</guid>
            <pubDate>Fri, 11 Dec 1992 00:00:00 GMT</pubDate>
            <description><![CDATA[Hey there! Welcome to my very first blog post! 🎉]]></description>
            <content:encoded><![CDATA[<p>Hey there! Welcome to my very first blog post! 🎉</p>
<p>I'm super excited to start sharing my thoughts and experiences with you all through this platform. As someone who's passionate about technology and programming, I figured it's about time I carved out my own little corner of the internet.</p>
<p>You know what's funny? I spent way too much time deciding what to write for my first post. Should it be technical? Personal? A mix of both? In the end, I decided to just be myself and write whatever comes to mind.</p>
<p>I've been working in tech for a while now, and there's always something new to learn. Whether it's a new programming language, a cool framework, or an interesting design pattern, the learning never stops. And that's exactly what I love about this field!</p>
<p>Here's a random list of things I'm currently excited about:</p>
<ul>
<li>Building this blog with Docusaurus</li>
<li>Exploring new technologies</li>
<li>Sharing knowledge with the community</li>
<li>Learning from others' experiences</li>
</ul>
<p>I plan to write about:</p>
<ol>
<li>Technical tutorials</li>
<li>Programming tips and tricks</li>
<li>Personal experiences in tech</li>
<li>Random thoughts about software development</li>
</ol>
<p>Stay tuned for more posts! Feel free to reach out if you want to discuss anything tech-related (or just want to say hi)!</p>
<p>Happy coding! 💻</p>]]></content:encoded>
            <category>Hello</category>
            <category>Docusaurus</category>
        </item>
    </channel>
</rss>